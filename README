## Initialize
dagger init --sdk=java --source=./ --name=java-build
dagger develop --sdk=java --source=./

dagger init --sdk=typescript --source=./ --name=java-build
dagger develop --sdk=typescript --source=./

dagger init --sdk=go --source=./ --name=java-build
dagger develop --sdk=go --source=./

## How to Use

dagger -m ../dagger-modules/java/java-build call publish \
    --source=./ \
    --repository ttl.sh \
    --appName spring-petclinic \
    --version 1.0.0
export JENKINS_PASSWORD=admin123 && dagger -m ../dagger-modules/java/java-build call publish \
    --source=./ \
    --repository "nexus-registry:5443" \
    --username admin \
    --password env:JENKINS_PASSWORD \
    --appName "docker/spring-petclinic" \
    --version 1.0.0

dagger -m ../dagger-modules/typescript/java-build call publish \
    --source=./ \
    --repository ttl.sh \
    --appName spring-petclinic \
    --version 1.0.0
export JENKINS_PASSWORD=admin123 && dagger -m ../dagger-modules/typescript/java-build call publish \
    --source=./ \
    --repository "nexus-registry:5443" \
    --username admin \
    --password env:JENKINS_PASSWORD \
    --appName "docker/spring-petclinic" \
    --version 1.0.0

dagger -m ../dagger-modules/go/java-build call publish \
    --source=./ \
    --repository ttl.sh \
    --appName spring-petclinic \
    --version 1.0.0
export JENKINS_PASSWORD=admin123 && dagger -m ../dagger-modules/go/java-build call publishWithAuth \
    --source=./ \
    --repository "nexus-registry:5443" \
    --username admin \
    --password env:JENKINS_PASSWORD \
    --appName "docker/spring-petclinic" \
    --version 1.0.0

https://github.com/levlaz/snippetbox/tree/main

echo "admin123" | docker login localhost:5000 --username admin --password-stdin

## Add repot to gitea
git remote remove gitea && git remote add gitea http://admin:admin@localhost:3000/admin/dagger-modules.git && git push --force gitea
git remote remove gitea && git remote add gitea http://admin:admin@localhost:3000/admin/spring-petclinic.git && git push --force gitea

## Cenerate certificate nexus docker
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout certs/nexus.key -out certs/nexus.crt -config certs/cert.cnf

openssl pkcs12 -export -in certs/nexus.crt -inkey certs/nexus.key \
    -out certs/nexus.p12 -name nexus \
    -passout pass:password

keytool -importkeystore \
    -deststorepass password -destkeypass password \
    -destkeystore keystore.jks \
    -srckeystore certs/nexus.p12 -srcstoretype PKCS12 \
    -srcstorepass password -alias nexus

openssl req -x509 -nodes -newkey rsa:4096 -days 365 \
    -subj "/CN=nexus.local" \
    -addext "subjectAltName = DNS:DNS:nexus.local, IP:127.0.0.1" \
    -keyout certs/nexus.key \
    -out certs/nexus.cert